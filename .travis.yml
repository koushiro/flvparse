# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
sudo: required
language: rust
services: docker

env:
  global:
    - CRATE_NAME=flvparser

matrix:
  include:
  # Linux
  #  - env: TARGET=aarch64-unknown-linux-gnu
  #  - env: TARGET=arm-unknown-linux-gnueabi
  #  - env: TARGET=armv7-unknown-linux-gnueabihf
  #  - env: TARGET=i686-unknown-linux-gnu
  #  - env: TARGET=i686-unknown-linux-musl
  #  - env: TARGET=mips-unknown-linux-gnu
  #  - env: TARGET=mips64-unknown-linux-gnuabi64
  #  - env: TARGET=mips64el-unknown-linux-gnuabi64
  #  - env: TARGET=mipsel-unknown-linux-gnu
  #  - env: TARGET=powerpc-unknown-linux-gnu
  #  - env: TARGET=powerpc64-unknown-linux-gnu
  #  - env: TARGET=powerpc64le-unknown-linux-gnu
  #  - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
  - env: TARGET=x86_64-unknown-linux-gnu
  #  - env: TARGET=x86_64-unknown-linux-musl

  # OSX
  #  - env: TARGET=i686-apple-darwin
  #    os: osx
  - env: TARGET=x86_64-apple-darwin
    os: osx

  # Testing other channels
  - env: TARGET=x86_64-unknown-linux-gnu
    rust: nightly
  - env: TARGET=x86_64-apple-darwin
    os: osx
    rust: nightly

before_install:
  - rustup self update

install:
  - rustup component add rustfmt-preview
  - rustup component add clippy-preview

before_script:
  - export PATH=$HOME/.cargo/bin:$PATH

script:
  - bash ci/script.sh

before_deploy:
  - bash ci/before_deploy.sh

deploy:
  provider: releases
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: eDPM2jClGak2/g59fxJALM7YMIQiO706m0FZERJrWo82KbYvpWQ6Eu1Y79TALwsRnJYDPCafHWINzy4lox9neKEQimqT+kyCo6ZrBMyM8pTAtznfP+g45+FnY2lcBXqXIbzI2iwyVaFhpWVuH2HRx3vkrL5k/Vtc40bKWb2ImxqH/d++DzScLVirNF7KC0SYVysw/RpkIxAD1a+TBozNpW1e1LCg3aoFFIaGIyNytO8BALMtPZN+T7qh+0ZqEbU76uW7wUlhAtICHyCCWZZkUNS9B57tVnLe7Nv1I7dig1fAYPKb87VNPbS9D3pR6RzJxCZUr71tHaBRB0+V+1a54OHtILo3va1UbYuiHQ+/5La2/3NBomB0r4Ovd1qRlSWv420Kfujcp9QHfoN5OEqfVRtaZUctQwGtRHxd3WJSi/PLgnMJtcC/QOuFrehgxYJ3VGYF9vp6BN7b5v2lVrTBTDg9bct3Ct18aGsSUGqXBKqGUk9ydamBAuV+PqeWgo0V4yPCK3ZTj7QlyBrZbl8o+1lvacf70B8bnGDeD6s8wmQ0K8m5aTAwfUH/KfgHOoYwbfSroS9PQJvn2AUVG1SfIbkuhPtrnxBJM/Yv1zaS7F8sUqZujG2R/juD2YKqMp78MY0dEU1KdD23WS4lUVE33KfrJZyTMbBaIT4A6IRreYU=
    file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  skip_cleanup: true
  on:
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true

cache:
  directories:
    - /home/travis/.cargo

before_cache:
  - rm -rf /home/travis/.cargo/registry

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - develop

notifications:
  email:
    on_success: never
    on_failure: always
